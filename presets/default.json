{
  "name": "default",
  "description": "Default preset for general-purpose code analysis",

  "extensions": {
    ".c": 1.0,
    ".h": 0.9,
    ".cpp": 1.0,
    ".hpp": 0.9,
    ".cc": 1.0,
    ".go": 1.2,
    ".rs": 1.2,
    ".sol": 1.3,
    ".vy": 1.3,
    ".cairo": 1.3,
    ".move": 1.3,
    ".ts": 1.0,
    ".tsx": 1.0,
    ".js": 0.9,
    ".jsx": 0.9,
    ".py": 1.0,
    ".java": 0.9,
    ".cs": 0.8,
    ".toml": 0.5,
    ".json": 0.4,
    ".yml": 0.5,
    ".yaml": 0.5,
    ".ini": 0.4,
    ".md": 0.1
  },

  "path_boosts": [
    {
      "pattern": "(^|/)(src|lib|pkg|internal|core|server|api|cmd)(/|$)",
      "weight": 0.6,
      "description": "Core source directories"
    },
    {
      "pattern": "(^|/)(contracts?)(/|$)",
      "weight": 0.8,
      "description": "Smart contract directories"
    },
    {
      "pattern": "(^|/)(app|router|handler|controller|service|models?)(/|$)",
      "weight": 0.4,
      "description": "Application logic directories"
    }
  ],

  "path_penalties": [
    {
      "pattern": "(^|/)(tests?|__tests__|testdata|spec|mocks?|fixtures?)(/|$)",
      "weight": -1.5,
      "description": "Test directories"
    },
    {
      "pattern": "(^|/)(examples?|samples?|demos?|docs?)(/|$)",
      "weight": -0.6,
      "description": "Example and documentation directories"
    },
    {
      "pattern": "(^|/)(scripts?|ci|\\.github|doc)(/|$)",
      "weight": -0.3,
      "description": "Build and CI directories"
    }
  ],

  "config_top_files": [
    "Dockerfile",
    "docker-compose.yml",
    "Makefile",
    "Cargo.toml",
    "Cargo.lock",
    "go.mod",
    "go.sum",
    "package.json",
    "pnpm-lock.yaml",
    "yarn.lock"
  ],

  "entrypoint_patterns": [
    "(^|/)cmd/[^/]+/main\\.go$",
    "(^|/)main\\.go$",
    "(^|/)src/main\\.rs$",
    "(^|/)src/main\\.(ts|tsx|js|jsx)$"
  ],

  "security_focus": "Choose the most security-relevant files across the project: core logic, state management, authentication, interfaces, and important configs. Avoid tests/mocks/fixtures unless they contain unique logic. Prefer spread across critical components.",

  "graphs": {
    "primary": "SystemArchitecture",
    "required": [
      "Data flow graph showing how information moves through the system, tracking transformations and dependencies",
      "Access control and permission model showing authorization boundaries and privilege levels"
    ],
    "default_additional": 2
  }
}